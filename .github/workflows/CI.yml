
name: Continuous Integration

on:
  push:
    branches:
    - '**'


jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Login to Docker Hub
      run: docker login -u ${{ secrets.DOCKER_USERNAME }}
        -p ${{ secrets.DOCKER_PASSWORD }}
    - name: Pull Docker Image (php)
      run: docker pull ${{ secrets.DOCKER_USERNAME }}/calculate_backend:v1
    - name: Build a container from the calculate backend image
      run: docker run -p 8002:8000 -dit ${{ secrets.DOCKER_USERNAME }}/calculate_backend:v1
    - name: Pull Docker Image(php)
      run: docker pull ${{ secrets.DOCKER_USERNAME }}/exchange_backend:v1
    - name: Build a container from the exchange backend image
      run: docker run -p 5002:5000 -dit ${{ secrets.DOCKER_USERNAME }}/exchange_backend:v1
    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with:
        python-version: "3.10"
    - name: Get pip cache dir
      id: pip-cache
      run: |
        echo "::set-output name=dir::$(pip cache dir)"

    - name: Cache pip
      uses: actions/cache@v1
      with:
        path: ${{ steps.pip-cache.outputs.dir }}
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f python_app/requirements.txt ]; then pip install -r python_app/requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Running tests
      run: |
        python python_app/tests.py
    - name: Set up PhP 8
      uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
      with:
        php-version: '8.0'
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"
      working-directory: ./php_app
    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      working-directory: ./php_app
    - name: Generate key
      run: php artisan key:generate
      working-directory: ./php_app
    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache
      working-directory: ./php_app
    - name: Create Database
      run: |
        mkdir -p database
        touch database/database.sqlite
      working-directory: ./php_app
    - name: Execute tests (Unit and Feature tests) via PHPUnit
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: database/database.sqlite
      run: vendor/bin/phpunit
      working-directory: ./php_app
    - name: Use Node.js
      uses: actions/setup-node@v2
      with: 
        node-version: "14.x"
    - name: Install dependencies
      run: npm install
      working-directory: ./nodejs_app
    - name: Run test
      run: npm test
      working-directory: ./nodejs_app